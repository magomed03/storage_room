лр 1
Реализовать следующую программу:

Создать класс Поле, хранящий двумерный массив символов – игровое поле. 
Реализовать случайное заполнение поля различными символами, например ‘_’ для пустой клетки, ‘0’ для препятствия, ‘*’ ‘!’ для специальных плиток.

Создать класс Юнит, хранящий координаты юнита и текст.
Сделать класс Юнит абстрактным, объявить в нём абстрактный метод движения, после унаследовать от него два подкласса и в них определить конкретные реализации этого метода.
Например, класс Unit и наследующие ему Rook и Bishop, передвигающиеся как соответствующие шахматные фигуры.

Альтернативно можете сделать абстрактный класс поле с разными наследниками – прямоугольны и круглым полем.

Также реализуйте взаимодействие со строками. 
Например, при перемещении на клетку ‘*’ в хранящийся у юнита текст добавляется слово «bonus», а на клетке ‘!’ все слова «bonus» обнуляются и их количество выводится на экран. 
Можете придумать свою вариацию работы со строками или реализовать её отдельным модулем в программе. Главное показать умение работать с классом String.

Перемещение юнита должно реализовываться вводом команд с клавиатуры. Каждый ход нужно перерисовывать поле, со специальным символом на месте юнита. Придумайте свои вариации наследных классов.

лр 2
Реализовать следующую программу:

Создать окно приложения (унаследовав класс JFrame), на нём разместить различные визуальные компоненты,
например: область выводимого текста, текстовое поле ввода, кнопку (классы JTextArea, JTextField, JButton).
Также использовать иконки (ImageIcon). Реализовать взаимодействие с пользователем с использованием как минимум одного из интерфейсов ActionListener, KeyListener, MouseListener. 

Можете сделать любое интерактивное приложение, - главное это наличие разных виджетов и взаимодействие с пользователем.

лр 3
Реализовать новую программу или модернизировать программу из Лабораторной №2

Добавить отрисовку изображений с задаваемым поворотом (переопределив методы paint(Grahics g) или paintComponent(Graphics g)) используя класс AffineTransform

Создать параллельный поток. (либо напрямую классом Thread, либо реализацией интерфейса Runnable).

Использовать коллекцию (например список - класс ArrayList<>) для хранения и динамического добавления/удаления элементов.

Можете сделать любое интерактивное приложение, - главное это наличие поворота изображения, параллельного потока и коллекции.

